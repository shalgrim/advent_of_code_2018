#ip 2
addi 2 16 2  # I00 registers[2] += 16  # AFFECTS IP...jump to I17 first time thru and after I34-I35
seti 1 2 4   # I01 registers[4] = 1  # set reg4 to 1
seti 1 8 1   # I02 registers[1] = 1  # set reg1 to 1
mulr 4 1 5   # I03 registers[5] = registers[4] * registers[1]  # this will always be 1 if we're coming in from last 2 lines
eqrr 5 3 5   # I04 registers[5] = 1 if registers[5] == registers[3] else 0
addr 5 2 2   # I05 registers[2] += registers[5]  # AFFECTS IP adds reg5 to reg2
addi 2 1 2   # I06 registers[2] += 1  # AFFECTS IP skip next line
addr 4 0 0   # I07 registers[0] += registers[4]  # add reg4 to reg0
addi 1 1 1   # I08 registers[1] += 1  # increment reg1
gtrr 1 3 5   # I09 registers[5] = 1 if registers[1] > registers[3] else 0
addr 2 5 2   # I10 registers[2] += registers[5]  # if coming from line above, either increments or leaves alone
seti 2 6 2   # I11 jump to I03
addi 4 1 4   # I12 reg[4] += 1  # increment reg4
gtrr 4 3 5   # I13 reg[5] = 1 if reg[4] > reg[3] else 0
addr 5 2 2   # I14 reg[2] += reg[5]  set reg2 to reg5 (see prev instr)
seti 1 2 2   # I15 reg[2] = 1  # AFFECTS IP jump to I02
mulr 2 2 2   # I16 reg[2] *= reg[2]  # AFFECTS IP reg2 gets squared...so TERMINATE PROGRAM
addi 3 2 3   # I17 reg[3] += 2  # add to to reg3 (it's at 2 the first time thru, second time thru it's 10,550,400)
mulr 3 3 3   # I18 reg[3] *= reg[3]  # square reg3 (set to 4 first time thru)
mulr 2 3 3   # I19 reg[3] *= reg[2]  # multiply reg3 by 19 (set to 76 first time thru)
muli 3 11 3  # I20 reg[3] *= 11   # multiple reg3 by 11 (set to 836 first time thru
addi 5 2 5   # I21 reg[5] += 2  # add 2 to reg5 (set to 2 the first time thru)
mulr 5 2 5   # I22 reg[5] *= reg[2]   # multiply reg5 by  22 (set to 44 the first time thru)
addi 5 8 5   # I23 reg[5] += 8  # add 8 to reg5 (set to 52 first time thru)
addr 3 5 3   # I24 reg[3] += 5  # add 5 to reg3 (set to 841 first time thru)
addr 2 0 2   # I25 reg[2] += reg[0] # AFFECTS IP add reg0 to reg2...reg0 starts at 1 so this then skips the next line
seti 0 4 2   # I26 reg[2] = 0  # AFFECTS IP jump to I01
setr 2 5 5   # I27 reg[5] = reg[2]  # set reg5 to 27
mulr 5 2 5   # I28 reg[5] *= reg[2]  # reg5  now equals 27*28 = 756
addr 2 5 5   # I29 reg[5] += reg[2]  # reg5 now equals 756 + 29 = 785
mulr 2 5 5   # I30 reg[5] *= reg[2]  # reg5 now equals 785 * 30 = 23,550
muli 5 14 5  # I31 reg[5] *= 14  # reg5 now equals 23,550 * 14 = 329,700
mulr 5 2 5   # I32 reg[5] *= reg[2]  # reg5 now equals 329,700 * 32 = 10,550,400
addr 3 5 3   # I33 reg[3] += reg[5]  # add 10,550,400 to reg3, which last got set on I24, so 10,568,797
seti 0 8 0   # I34 reg[0] = 0  # set reg0 to 0
seti 0 5 2   # I35 reg[2] = 0  # GOTO I01
