#ip 4
 0 seti 123 0 1
 1 bani 1 456 1
 2 eqri 1 72 1              # if you are doing binary right...
 3 addr 1 4 4               # ...goto 5
 4 seti 0 0 4               # ...else enter infinite loop
 5 seti 0 7 1               # 0 => reg1
 6 bori 1 65536 2           # binary or reg1 w/ 65536 (1 followed by 16 0's) => reg2
 7 seti 8725355 6 1         # 8725335 => reg1
 8 bani 2 255 5             # binary and reg2 (65536) with 255 (11111111) => reg5
 9 addr 1 5 1               # reg5 +1 => reg1
10 bani 1 16777215 1        # binary and reg1 with 16777215 => 1
11 muli 1 65899 1           # reg1 *= 65899
12 bani 1 16777215 1        # binary and reg1 with 16777215 => 1
13 gtir 256 2 5             # if 256 > reg2...  (which is dependent on lines 6 and 26)
14 addr 5 4 4               # ...goto 16 (which will be end condition if reg1 == reg0)
15 addi 4 1 4               # goto 20
16 seti 27 8 4              # goto 28 (which will be the end condition if reg1 == reg0)
17 seti 0 0 5               # 0 => reg5
18 addi 5 1 3               # reg5 + 1 => reg3
19 muli 3 256 3             # reg3 *= 256
20 gtrr 3 2 3               # if reg3 > reg2...
21 addr 3 4 4               # ...goto 23
22 addi 4 1 4               # goto 27 (which takes you back to 8)
23 seti 25 1 4              # goto 26 (which puts reg5 => reg2 then takes you back to 8)
24 addi 5 1 5               # reg5 += 1
25 seti 17 9 4              # goto 18
26 setr 5 1 2               # reg5 => reg2
27 seti 7 6 4               # goto 8
28 eqrr 1 0 5               # if reg1 == reg0...  # end condition is when reg1 == reg0
29 addr 5 4 4               # ...end
30 seti 5 7 4               # ...else goto 6
